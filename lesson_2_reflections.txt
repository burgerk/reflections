-
hat happens when you initialize a repository? Why do you need to do it?

Git creates the needed metadata to function as repos 

-How is the staging area different from the working directory and the repository?
What value do you think it offers?

Staging area only contains files to be committed. Self-evident value
git diff - compare working to staged
git diff --staged  [commit_num]
git diff [commit1] [commit2]

-How can you use the staging area to make sure you have one commit per logical
change?

-What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

-How do the diagrams help you visualize the branch structure?

by providing a multi-dim timeline

-What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

Commits are merged   
Line feeds matter in merges.  https://help.github.com/articles/dealing-with-line-endings/#platform-all
Compare a commit implicitly to its parent:  git show commit_id
log w/ branches: git log --graph --oneline 

-What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
